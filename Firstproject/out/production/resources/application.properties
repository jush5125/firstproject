#\uD504\uB85C\uC81D\uD2B8\uBA85
spring.application.name=mysql


# \uC2E4\uD589\uD0ED \uCEEC\uB7EC
spring.output.ansi.enabled=always


# \uD55C\uAE00 \uC785\uCD9C\uB825 \uC124\uC815\uD558\uAE30
server.servlet.encoding.force=true


# \uAE30\uBCF8 \uB85C\uADF8 \uBCF4\uAE30
spring.jpa.show-sql=true


# \uB85C\uADF8(\uB85C\uAE45/\uD558\uC774\uBC84\uB124\uC774\uD2B8)_\uC2DC\uAC04(DEBUG)\uAE4C\uC9C0 \uD655\uC778\uD558\uAE30
logging.level.org.hibernate.SQL = debug
logging.level.org.hibernate.orm.jdbc.bind = trace


# Hibernate\uAC00 DB\uC5D0 \uC218\uD589\uD558\uB294 \uBAA8\uB4E0 \uCFFC\uB9AC\uBB38\uC744 \uCF58\uC194\uC5D0 \uCD9C\uB825(*\uC774\uC058\uAC8C)
# (\uD3EC\uB9F7\uC5D0 \uB9DE\uCDB0\uC11C \uC774\uC058\uAC8C \uBCF4\uAE30)
spring.jpa.properties.hibernate.format_sql=true


# Hibernate\uC774 DB\uC5D0 \uB0A0\uB9AC\uB294 \uBAA8\uB4E0 \uCFFC\uB9AC(DDL, DML)\uB97C \uBCF4\uC5EC\uC900\uB2E4
# (\uCFFC\uB9AC\uC5D0 \uBC14\uC778\uB529 \uB418\uB294 \uD30C\uB77C\uBBF8\uD130\uAE4C\uC9C0 \uB85C\uADF8\uB85C \uBCF4\uAE30)
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE




# \uB370\uC774\uD130 \uC18C\uC2A4 \uCD08\uAE30\uD654\uB97C \uC9C0\uC5F0\uC2DC\uD0A4\uB294 \uBC29\uBC95
# (true \uC2DC,\uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC5F0\uACB0\uC744 \uCD08\uAE30\uD654)
spring.jpa.deferdatasource-initialization=true


# \uC2A4\uD504\uB9C1 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uCD08\uAE30\uD654
# DataSource \uC758 \uC2A4\uD0A4\uB9C8\uB97C schema.sql \uC744 \uD1B5\uD574 \uC0DD\uC131\uD558\uACE0, data.sql \uC744 \uD1B5\uD574 \uCD08\uAE30\uD654
spring.datasource.data=classpath:/data.sql


# SQL \uCD08\uAE30\uD654\uB97C \uD56D\uC0C1 \uC218\uD589\uD560 \uAC83\uC778\uC9C0\uB97C \uC9C0\uC815
# (*. always\uB85C \uC124\uC815\uD558\uBA74, \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC2DC\uC791 \uC2DC\uC810\uC5D0 SQL \uCD08\uAE30\uD654\uB97C \uD56D\uC0C1 \uC218\uD589)
spring.datasource.spring.datasource.initialization-mode=always



# \u25A0\uAC1C\uBC1C \uCD08\uAE30\uC5D0 \uC801\uD569\uD55C \uC124\uC815-----------------------------------
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl=update


# \u25A0\uAC1C\uBC1C \uCD08\uAE30\uC5D0 \uC801\uD569\uD55C \uC124\uC815(*\uC124\uBA85)-----------------------------------
# JPA\uC5D0\uC11C DDL\uC744 \uC0DD\uC131\uD558\uB3C4\uB85D \uD560\uC9C0\uC5D0 \uB300\uD55C \uC5EC\uBD80\uB97C \uC124\uC815
# spring.jpa.generate-ddl=true
#\uC0DD\uC131\uB41C DDL\uC744 \uC2E4\uD589\uD560 \uBC29\uBC95\uC744 \uC124\uC815\uD569\uB2C8\uB2E4. (\uC124\uC815 \uAC00\uB2A5\uD55C value)
# update : schema\uB97C \uC790\uB3D9\uC73C\uB85C \uC0DD\uC131\uD558\uACE0 \uD544\uC694\uC5D0 \uB530\uB77C \uC218\uC815\uD569\uB2C8\uB2E4.
# create-drop : application \uAE30\uB3D9 \uC2DC schema\uB97C \uC0DD\uC131\uD558\uACE0 \uC885\uB8CC \uC2DC \uC0AD\uC81C\uD569\uB2C8\uB2E4.
# create : application \uAE30\uB3D9 \uC2DC \uAE30\uC874\uC758 schema\uB97C \uC9C0\uC6B0\uACE0 \uC0C8\uB86D\uAC8C \uC0DD\uC131\uD569\uB2C8\uB2E4.
# spring.jpa.hibernate.ddl=update


# \u25A0 H2 DB \uC0AC\uC6A9\uC2DC, (*JDBC \uC8FC\uC18C \uACE0\uC815)
#spring.datasource.generate-unique-name=false


# \u25A0mysql-----------------------------------
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/connectdb?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=0000
